name: Publish Packages

on:
  push:
    branches:
      - main
    paths:
      - 'packages/**'

jobs:
  check-and-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [button, code-block, split-text]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare pnpm@8.9.0 --activate

      - name: Check if version changed
        id: check_version
        run: |
          PACKAGE_PATH="packages/${{ matrix.package }}/package.json"
          CURRENT_VERSION=$(node -p "require('./${PACKAGE_PATH}').version")
          PUBLISHED_VERSION=$(npm view @open-react-hub/${{ matrix.package }} version 2>/dev/null || echo "0.0.0")
          if [ "$CURRENT_VERSION" != "$PUBLISHED_VERSION" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi
        shell: bash
      - name: Install dependencies
        if: steps.check_version.outputs.version_changed == 'true'
        run: |
          cd packages/${{ matrix.package }}
          pnpm install

      - name: Build package 
        if: steps.check_version.outputs.version_changed == 'true'
        run: |
          cd packages/${{ matrix.package }}
          pnpm build
            
      - name: Publish package
        if: steps.check_version.outputs.version_changed == 'true'
        run: |
          cd packages/${{ matrix.package }}
          pnpm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Log publish result
        if: steps.check_version.outputs.version_changed == 'true'
        run: echo "Published ${{ matrix.package }} package"

      - name: Log no changes
        if: steps.check_version.outputs.version_changed != 'true'
        run: echo "No version change for ${{ matrix.package }} package, skipping publish"

